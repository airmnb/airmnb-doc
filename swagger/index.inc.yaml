## --------------------
## DON'T EDIT THIS FILE
## --------------------
## Engine: yamlinc@0.0.64
## Source: index.yaml

openapi: 3.0.0
servers:
  - url: 'https://www.airmnb.com/api/1.0.0'
  - url: 'https://www.airmombaby.com/api/1.0.0'
info:
  description: >-
    This is the API design for Air Mom & Baby Global
    [https://www.airmombaby.com](https://www.airmombaby.com) and Air Mom & Baby
    China [https://www.airmnb.com](https://www.airmnb.com).
  version: 1.0.0
  title: Airmnb API design
  termsOfService: pendingd
  contact:
    email: mr.shaojun@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: func
    description: Functional APIs
  - name: res
    description: Resource APIs
paths:
  /login/weapp:
    get:
      tags:
        - func
      summary: Wexin mini-program login
      parameters:
        - name: code
          in: query
          required: true
          description: Wexin code derived after calling wx.login()
          schema:
            type: string
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /login/google:
    get:
      tags:
        - func
      summary: Google SSO
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema:
                type: string
  /login/google/callback:
    get:
      tags:
        - func
      summary: Google SSO callback URL
      operationId: updatePet
      responses:
        '302':
          description: Successfully logged in and redirect to the home page
        '403':
          description: No permissions
  '/logout/{userid}':
    get:
      tags:
        - func
      summary: Airmnb logout
      parameters:
        - name: userid
          in: path
          description: Airmnb userid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '302':
          description: redirect to login
          headers:
            location:
              schema:
                type: string
                description: redirect to the home page
                example: /
  /stat:
    get:
      tags:
        - func
      summary: Airmnb statistic information
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stat'
  /health-check:
    get:
      tags:
        - func
      summary: For load balancer health check
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema:
                type: string
                example: OK
  '/users/{userid}':
    get:
      tags:
        - res
      summary: get user object
      parameters:
        - name: userid
          in: path
          description: Airmnb userid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: existing user
          content:
            application/json:
              schema: {}
components:
  schemas:
    Stat:
      type: object
      properties:
        totalRegisteredUsers:
          type: integer
        totalOnlineUsers:
          type: integer
        totalProviders:
          type: integer
        totalBabies:
          type: integer
        totalActivities:
          type: integer
        totalBookings:
          type: integer
        totalTransactions:
          type: integer
    User:
      type: object
      properties:
        userid:
          type: string
          format: uuid
          description: Amb user's ID
          example: 9aa7bb47-90fb-45a1-9020-976464b08b65
        username:
          type: string
          description: >-
            Amb user name, unique across the whole Airmnb world. Once created,
            cannot change
          example: superopengl
        fullname:
          type: string
          description: >-
            Like "邵俊" which is the fullname in Chinese as Chinese users rarely
            separate to first name and last name
          example: 邵俊
        firstname:
          type: string
          example: Jun
        lastname:
          type: string
          example: Shao
        gender:
          type: boolean
          example: false
        dob:
          type: string
          format: date
          example: '2018-12-31'
        email:
          type: string
          format: email
          example: test@airmombaby.com
        phone:
          type: string
          example: '04051234567'
        language:
          type: string
          enum:
            - en
            - ch
          description: The user preferred UI language
          example: en
        wechatopenid:
          type: string
          description: >-
            WeChat openid if the user is from WeApp. openid is the value
            returned by calling wx.login()
        googlessoid:
          type: string
          description: Usually can be the gmail address derived from Google SSO
        facebookssoid:
          type: string
          description: Usually Facebook user id derived from Facebook SSO
        createdat:
          type: string
          format: date-time
          description: The timestamp (with timezone info) the user was created initially
          example: '2018-04-17T14:00:33.591Z'
    Provider:
      description: >-
        a provider is user object with certain must-have properites, like
        fullname, identity ID (passport or ABN), address.
      type: object
      properties:
        userid:
          type: string
          format: uuid
          description: Amb user's ID
        username:
          type: string
          description: >-
            Amb user name, unique across the whole Airmnb world. Once created,
            cannot change.
        fullname:
          type: string
          description: >-
            Like "邵俊" which is the fullname in Chinese as Chinese users rarely
            separate to first name and last name
        firstname:
          type: string
        lastname:
          type: string
        gender:
          type: boolean
        dob:
          type: string
          format: date
        email:
          type: string
          format: email
        phone:
          type: string
        createdat:
          type: string
          format: date-time
          description: The timestamp (with timezone info) the user was created initially
        identitytype:
          type: string
          enum:
            - ID
            - passport
            - ABN
            - drivelicense
            - others
        identitynumber:
          type: string
        address:
          $ref: '#/components/schemas/Geolocation'
    Geolocation:
      type: object
      properties:
        addr1:
          type: string
        addr2:
          type: string
        addr3:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        postcode:
          type: string
  requestBodies: {}
