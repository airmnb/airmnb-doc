## --------------------
## DON'T EDIT THIS FILE
## --------------------
## Engine: yamlinc@0.0.64
## Source: index.yaml

openapi: 3.0.0
servers:
  - url: 'https://www.airmnb.com/api/1.0.0'
  - url: 'https://www.airmombaby.com/api/1.0.0'
info:
  description: >-
    This is the API design for Air Mom & Baby Global
    [https://www.airmombaby.com](https://www.airmombaby.com) and Air Mom & Baby
    China [https://www.airmnb.com](https://www.airmnb.com).
  version: 1.0.0
  title: Airmnb API design
  termsOfService: pendingd
  contact:
    email: mr.shaojun@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: func
    description: Functional APIs
  - name: res
    description: Resource APIs
paths:
  /login/weapp:
    get:
      tags:
        - func
      summary: Wexin mini-program login
      parameters:
        - name: code
          in: query
          required: true
          description: Wexin code derived after calling wx.login()
          schema:
            type: string
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /login/google:
    get:
      tags:
        - func
      summary: Google SSO
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema:
                type: string
  /login/google/callback:
    get:
      tags:
        - func
      summary: Google SSO callback URL
      operationId: updatePet
      responses:
        '302':
          description: Successfully logged in and redirect to the home page
        '403':
          description: No permissions
  '/logout/{userid}':
    get:
      tags:
        - func
      summary: Airmnb logout
      parameters:
        - name: userid
          in: path
          description: Airmnb userid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '302':
          description: redirect to login
          headers:
            location:
              schema:
                type: string
                description: redirect to the home page
                example: /
  /stat:
    get:
      tags:
        - func
      summary: Airmnb statistic information
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stat'
  /health-check:
    get:
      tags:
        - func
      summary: For load balancer health check
      responses:
        '200':
          description: successful login
          content:
            application/json:
              schema:
                type: string
                example: OK
  '/users/{userid}':
    get:
      tags:
        - res
      summary: get user object
      parameters:
        - name: userid
          in: path
          description: Airmnb userid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: existing user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - res
      summary: update user object
      parameters:
        - name: userid
          in: path
          description: Airmnb userid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: updated user object
          content:
            application/json:
              schema:
                type: string
                example: ''
  /users:
    post:
      tags:
        - res
      summary: create a new user object
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: created
  '/babies/{babyid}':
    get:
      tags:
        - res
      summary: get baby object
      parameters:
        - name: babyid
          in: path
          description: Airmnb babyid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: existing user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baby'
    put:
      tags:
        - res
      summary: update baby object
      parameters:
        - name: babyid
          in: path
          description: Airmnb babyid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: updated
          content:
            application/json: {}
    delete:
      tags:
        - res
      summary: delete a baby object
      parameters:
        - name: babyid
          in: path
          description: Airmnb babyid
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: deleted
  /babies:
    post:
      tags:
        - res
      summary: create a new baby for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Baby'
      responses:
        '201':
          description: created
components:
  schemas:
    Stat:
      type: object
      properties:
        totalRegisteredUsers:
          type: integer
        totalOnlineUsers:
          type: integer
        totalProviders:
          type: integer
        totalBabies:
          type: integer
        totalActivities:
          type: integer
        totalBookings:
          type: integer
        totalTransactions:
          type: integer
    User:
      type: object
      properties:
        userid:
          type: string
          format: uuid
          description: Amb user's ID
          example: 9aa7bb47-90fb-45a1-9020-976464b08b65
        username:
          type: string
          description: >-
            Amb user name, unique across the whole Airmnb world. Once created,
            cannot change
          example: superopengl
        fullname:
          type: string
          description: >-
            Like "邵俊" which is the fullname in Chinese as Chinese users rarely
            separate to first name and last name
          example: 邵俊
        firstname:
          type: string
          example: Jun
        lastname:
          type: string
          example: Shao
        gender:
          type: boolean
          example: false
        dob:
          type: string
          format: date
          example: '2018-12-31'
        email:
          type: string
          format: email
          example: test@airmombaby.com
        phone:
          type: string
          example: '04051234567'
        language:
          type: string
          enum:
            - en
            - ch
          description: The user preferred UI language
          example: en
        wechatopenid:
          type: string
          description: >-
            WeChat openid if the user is from WeApp. openid is the value
            returned by calling wx.login()
        googlessoid:
          type: string
          description: Usually can be the gmail address derived from Google SSO
        facebookssoid:
          type: string
          description: Usually Facebook user id derived from Facebook SSO
        createdat:
          type: string
          format: date-time
          description: The timestamp (with timezone info) the user was created initially
          example: '2018-04-17T14:00:33.591Z'
      required:
        - userid
    Provider:
      description: >-
        a provider is user object with certain must-have properites, like
        fullname, identity ID (passport or ABN), address.
      type: object
      properties:
        userid:
          type: string
          format: uuid
          description: Amb user's ID
        username:
          type: string
          description: >-
            Amb user name, unique across the whole Airmnb world. Once created,
            cannot change.
        fullname:
          type: string
          description: >-
            Like "邵俊" which is the fullname in Chinese as Chinese users rarely
            separate to first name and last name
        firstname:
          type: string
        lastname:
          type: string
        gender:
          type: boolean
        dob:
          type: string
          format: date
        email:
          type: string
          format: email
        phone:
          type: string
        createdat:
          type: string
          format: date-time
          description: The timestamp (with timezone info) the user was created initially
        identitytype:
          type: string
          enum:
            - ID
            - passport
            - ABN
            - drivelicense
            - others
        identitynumber:
          type: string
        address:
          $ref: '#/components/schemas/Geolocation'
    Geolocation:
      type: object
      properties:
        addr1:
          type: string
        addr2:
          type: string
        addr3:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        postcode:
          type: string
    Baby:
      type: object
      properties:
        babyid:
          type: string
          format: uuid
          description: Amb baby's ID
          example: 9aa7bb47-90fb-45a1-9020-976464b08b65
        babyname:
          type: string
          description: Baby's name. Can be nickname
          example: Alice
        gender:
          type: boolean
          example: false
        dob:
          type: string
          format: date
          example: '2018-12-31'
        language:
          type: string
          enum:
            - en
            - ch
          description: The user preferred UI language
          example: en
        owneruserid:
          type: string
          format: uuid
          description: baby's parent's ID
          example: 44444444-4444-4444-4444-976464b08b65
        createdat:
          type: string
          format: date-time
          description: The timestamp (with timezone info) the user was created initially
          example: '2018-04-17T14:00:33.591Z'
      required:
        - babyid
        - babyname
        - gender
        - dob
        - owneruserid
    Activity:
      type: object
      properties:
        activityid:
          type: string
          format: uuid
          example: 1237bb47-90fb-bd1-4320-976464b04567
        providerid:
          type: string
          format: uuid
          example: 99999999-9999-999-9999-976464b04567
        title:
          type: string
          example: Funny music lesson
        description:
          type: string
          example: >-
            I am a female music teacher who can teach singing and drum. Please
            join me.
        cap:
          type: integer
          example: maximum children I can serve at a time
        price:
          type: string
          format: currency
          description: the total price for this activity. Can be 0 for free activity.
          example: $100
        acceptagemin:
          type: integer
          description: the minimum child age. Not specifying means no limit
          example: 6
        acceptagemax:
          type: integer
          description: the maximum child age. Not specifying means no limit
          example: 12
        acceptgender:
          type: integer
          description: '0 or 3 means either boy or girl. 1 for girl, 2 for boy'
          example: 3
        startat:
          type: string
          format: date-time
          example: '2018-04-17T14:00:00.000Z'
        endat:
          type: string
          format: date-time
          example: '2018-04-17T16:00:00.000Z'
        active:
          type: boolean
          description: >-
            if the activity is active. Provider can cancel or close an activity
            before its starting
          example: true
        language:
          type: integer
          description: >-
            The language the service will be provided in. 1 for English, 2 for
            Mandarin
          example: 3
        createdat:
          type: string
          format: date-time
          description: The timestamp (with timezone info) the user was created initially
          example: '2018-04-17T14:00:33.591Z'
      required:
        - nactivityid
        - providerid
        - title
        - description
        - cap
        - price
        - startat
        - endat
        - createdat
    ActivityFeedback:
      type: object
      properties:
        activityid:
          type: string
          format: uuid
          example: 1237bb47-90fb-bd1-4320-976464b04567
        bookingid:
          type: string
          format: uuid
          example: 33333333-3333-333-3333-976464b04567
        providerid:
          type: string
          format: uuid
          example: 99999999-9999-999-9999-976464b04567
        consumerid:
          type: string
          format: uuid
          example: 11111111-1111-111-1111-976464b04567
        content:
          type: string
          description: Within 140 unicode characters.
          example: >-
            Good service and nice guy. Thank you Alice, my girl had a very good
            time with you!
        staring:
          type: integer
          description: '0-5, increment by 1'
          example: 5
        createdat:
          type: string
          format: date-time
          description: The timestamp (with timezone info) the user was created initially
          example: '2018-04-17T14:00:33.591Z'
      required:
        - activityid
        - bookingid
        - providerid
        - consumerid
        - content
        - staring
        - createdat
    Booking:
      type: object
      properties:
        bookingid:
          type: string
          format: uuid
          example: 33333333-3333-333-3333-976464b04567
        sequenceid:
          type: integer
          description: The sequencial integer of the booking for this activity
          example: 1
        activityid:
          type: string
          format: uuid
          example: 1237bb47-90fb-bd1-4320-976464b04567
        providerid:
          type: string
          format: uuid
          example: 99999999-9999-999-9999-976464b04567
        consumerid:
          type: string
          format: uuid
          example: 11111111-1111-111-1111-976464b04567
        status:
          type: integer
          description: >-
            1 active, 2 checkedin, 4 finished, 8 cancelled, 16 terminated, 32
            inactive
          example: 1
        createdat:
          type: string
          format: date-time
          description: The timestamp (with timezone info) the user was created initially
          example: '2018-04-17T14:00:33.591Z'
      required:
        - bookingid
        - activityid
        - providerid
        - consumerid
        - status
        - createdat
    Response:
      type: object
      properties:
        error:
          type: object
          description: error object of the response
          properties:
            code:
              type: string
              description: Airmnb custom error code
              example: '10045'
            message:
              type: object
              description: error message object
              properties:
                template:
                  type: string
                  description: error message template key id. Used for i18n
                  example: cannotLogin
                args:
                  type: array
                  items:
                    type: object
                  example:
                    - jun.shao
                    - 2018/04/09
        data:
          type: object
          description: the returned object. Can be an array
      required:
        - error
  requestBodies: {}
